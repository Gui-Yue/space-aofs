// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "AO.space",
            "url": "https://ao.space/",
            "email": "service@ao.space"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/space/v1/api/async/task": {
            "get": {
                "description": "Query the status of an asynchronous task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Async"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "taskId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/async.AsyncTask"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/compressed": {
            "get": {
                "description": "Get compressed graph",
                "tags": [
                    "File"
                ],
                "summary": "Get compressed graph",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/copy": {
            "post": {
                "description": "Batch copy files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Batch copy files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "copyFilesReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.CopyFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.CopyRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/delete": {
            "post": {
                "description": "Delete files/folders to Recycle bin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Delete files/folders to Recycle bin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "DeleteId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.DeleteFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/async.AsyncTask"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/download": {
            "get": {
                "description": "File download",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "File"
                ],
                "summary": "File download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "range, such as：bytes=200-1000",
                        "name": "Range",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "206": {
                        "description": "Partial Content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    },
                    "416": {
                        "description": "Range Not Satisfiable",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/info": {
            "get": {
                "description": "Query file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Query file info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file/folder uuid",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file info",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.FileInfoRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/list": {
            "get": {
                "description": "Get file list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get file list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "folder uuid",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to filter folders",
                        "name": "isDir",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page，default:1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size，default:10",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort. The default is reverse order",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "file classification, field value: document，video，picture or other; If there is no field, all are included",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.GetListRspData"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/move": {
            "post": {
                "description": "Move file/folder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Move file/folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "moveFilesReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.MoveFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.DbAffect"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/rename": {
            "post": {
                "description": "Modify file/folder name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Modify file/folder name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "request info",
                        "name": "ModifyFileReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.ModifyFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.DbAffect"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/search": {
            "get": {
                "description": "Search files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Search files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "folder's uuid，default: /",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file type",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page, default:1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size，default:10",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort type, default value is in reverse order of change time",
                        "name": "orderBy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.GetListRspData"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/thumb": {
            "get": {
                "description": "Get thumbnail",
                "tags": [
                    "File"
                ],
                "summary": "Get thumbnail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "param error",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/proto.ErrMess"
                        }
                    }
                }
            }
        },
        "/space/v1/api/file/vod/symlink": {
            "post": {
                "description": "Create symbolic link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Create symbolic link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "parmas",
                        "name": "VodSymlinkReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.VodSymlinkReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.VodSymlinkRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/folder/create": {
            "post": {
                "description": "Create Folder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Folder"
                ],
                "summary": "Create Folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "createFolderReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.CreateFolderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.FileInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/folder/info": {
            "get": {
                "description": "Get folder details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Folder"
                ],
                "summary": "Get folder details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "folder's uuid",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.FolderInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/inner/file/info": {
            "get": {
                "description": "Get file info for inner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get file info for inner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.FileInfoForInnerRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/inner/file/infos": {
            "post": {
                "description": "Get fileinfo list for inner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Get fileinfo list for inner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "uuids",
                        "name": "FileInfoForTrendsReq",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/proto.FileInfoForTrendsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.FileInfoForTrendsRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/multipart/complete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multipart"
                ],
                "summary": "Complte multipart task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.CompleteMultipartTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.CompleteMultipartTaskRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/multipart/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multipart"
                ],
                "summary": "Creating a multipart task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.CreateMultipartTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "task info",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.CreateMultipartTaskRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/multipart/delete": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multipart"
                ],
                "summary": "Delete multipart task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.DeleteMultipartTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    }
                }
            }
        },
        "/space/v1/api/multipart/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multipart"
                ],
                "summary": "Query multipart task info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.ListMultipartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.ListMultipartRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/multipart/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Multipart"
                ],
                "summary": "Upload multipart data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request id",
                        "name": "requestId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "end",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "md5sum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "uploadId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "part content",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    }
                }
            }
        },
        "/space/v1/api/recycled/clear": {
            "post": {
                "description": "Clean out the recycle bin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recycled"
                ],
                "summary": "Clean out the recycle bin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "uuids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.RecycledPhyDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    }
                }
            }
        },
        "/space/v1/api/recycled/list": {
            "get": {
                "description": "Query the recycle bin file list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recycled"
                ],
                "summary": "Query the recycle bin file list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page index，default: 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size，default: 10",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.GetListRspData"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/recycled/restore": {
            "post": {
                "description": "Restore files from recycle bin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recycled"
                ],
                "summary": "Restore files from recycle bin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "params",
                        "name": "restoreFilesReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.RestoreRecycledReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    },
                    "201": {
                        "description": "asynchronous task",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/async.AsyncTask"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/status": {
            "get": {
                "description": "Querying service status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ServerStatus"
                ],
                "summary": "Querying service status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.StatusRsp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/sync/synced": {
            "get": {
                "description": "Obtain incremental synchronization data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sync"
                ],
                "summary": "Obtain incremental synchronization data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "timestamp",
                        "name": "timestamp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "deviceId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.GetListRspData"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/space/v1/api/user/delete": {
            "post": {
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "user id",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    }
                }
            }
        },
        "/space/v1/api/user/init": {
            "post": {
                "description": "Initialize user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Initialize user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "user id",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Rsp"
                        }
                    }
                }
            }
        },
        "/space/v1/api/user/storage": {
            "get": {
                "description": "Query the user space capacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Query the user space capacity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "targetUserId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "$ref": "#/definitions/proto.Storage"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Rsp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "msg code",
                    "allOf": [
                        {
                            "$ref": "#/definitions/proto.CodeType"
                        }
                    ]
                },
                "message": {
                    "description": "msg info",
                    "type": "string"
                },
                "requestId": {
                    "description": "trans id",
                    "type": "string"
                },
                "results": {
                    "description": "response body"
                }
            }
        },
        "async.AsyncTask": {
            "type": "object",
            "properties": {
                "processed": {
                    "type": "integer"
                },
                "taskId": {
                    "type": "string"
                },
                "taskStatus": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "proto.CodeType": {
            "type": "integer",
            "enum": [
                200,
                201,
                1001,
                1002,
                1003,
                1004,
                1005,
                1006,
                1007,
                1008,
                1009,
                1010,
                1011,
                1012,
                1013,
                1014,
                1015,
                1016,
                1017,
                1018,
                1021,
                1022,
                1027,
                1028,
                1029,
                1030,
                1031,
                1032,
                1036,
                1037,
                1038,
                1046,
                1050,
                1061,
                1062
            ],
            "x-enum-comments": {
                "CodeCopyIdError": "文件夹不能拷贝到自己",
                "CodeFailedToConnect": "建立连接失败",
                "CodeFailedToConnectDB": "连接DB失败",
                "CodeFailedToCreateBucket": "失败去创建桶",
                "CodeFailedToCreateFolder": "失败去创建文件夹",
                "CodeFailedToCreateMultipartTask": "失败去创建任务",
                "CodeFailedToCreateSymlink": "失败去创建符号链接",
                "CodeFailedToDeleteUser": "删除用户失败",
                "CodeFailedToGetUsedStorage": "获取用户空间使用量失败",
                "CodeFailedToInitUser": "失败去初始化用户",
                "CodeFailedToOpenFile": "打开文件失败",
                "CodeFailedToOperateDB": "失败去操作数据库",
                "CodeFailedToOptMinio": "失败去写文件",
                "CodeFailedToSaveFile": "失败去保存数据",
                "CodeFileExist": "文件已存在",
                "CodeFileNotExist": "文件不存在",
                "CodeFolderDepthTooLong": "文件夹层数超过5层",
                "CodeFolderExist": "文件夹已存在",
                "CodeFolderNotExist": "文件夹不存在",
                "CodeGetAsyncTaskInfoFailed": "获取异步任务状态失败",
                "CodeMultipartRangeUploaded": "分片范围已上传",
                "CodeMultipartTaskCompleteErr": "合并错误",
                "CodeMultipartTaskHashErr": "文件hash校验错误",
                "CodeMultipartTaskNotFound": "未找到任务",
                "CodeMultipartTaskOverlap": "任务重叠",
                "CodeMultipartTaskRangeErr": "上传范围错误",
                "CodeMultipartUploadingConflit": "分片范围上传冲突",
                "CodeNotEnoughSpace": "空间不够，不上传",
                "CodeParamErr": "参数错误",
                "CodeReqParamErr": "请求参数错误(推荐)",
                "CodeUserIdError": "用户Id的错误",
                "CodeWriteRedisFailed": "写入redis 失败",
                "CodeZipFileFailed": "压缩文件失败"
            },
            "x-enum-varnames": [
                "CodeOk",
                "CodeCreateAsyncTaskSuccess",
                "CodeParamErr",
                "CodeReqParamErr",
                "CodeFileNotExist",
                "CodeFailedToOpenFile",
                "CodeFolderNotExist",
                "CodeFailedToConnect",
                "CodeFailedToConnectDB",
                "CodeFailedToOptMinio",
                "CodeFailedToCreateBucket",
                "CodeFailedToSaveFile",
                "CodeFailedToOperateDB",
                "CodeFailedToCreateFolder",
                "CodeFileExist",
                "CodeFolderExist",
                "CodeFolderDepthTooLong",
                "CodeUserIdError",
                "CodeFailedToInitUser",
                "CodeFailedToDeleteUser",
                "CodeFailedToGetUsedStorage",
                "CodeCopyIdError",
                "CodeFailedToCreateMultipartTask",
                "CodeMultipartTaskNotFound",
                "CodeMultipartTaskOverlap",
                "CodeMultipartTaskRangeErr",
                "CodeMultipartTaskHashErr",
                "CodeMultipartTaskCompleteErr",
                "CodeNotEnoughSpace",
                "CodeMultipartRangeUploaded",
                "CodeMultipartUploadingConflit",
                "CodeWriteRedisFailed",
                "CodeZipFileFailed",
                "CodeFailedToCreateSymlink",
                "CodeGetAsyncTaskInfoFailed"
            ]
        },
        "proto.CompleteMultipartTaskReq": {
            "type": "object",
            "required": [
                "uploadId"
            ],
            "properties": {
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "proto.CompleteMultipartTaskRsp": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "executable": {
                    "type": "boolean"
                },
                "ext": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "proto.CopyFileReq": {
            "type": "object",
            "properties": {
                "dstPath": {
                    "description": "dest path",
                    "type": "string"
                },
                "uuids": {
                    "description": "uuids",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.CopyRsp": {
            "type": "object",
            "properties": {
                "affectRows": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.NewAndOldUuid"
                    }
                }
            }
        },
        "proto.CreateFolderReq": {
            "type": "object",
            "properties": {
                "currentDirUuid": {
                    "description": "current folder's uuid",
                    "type": "string"
                },
                "folderName": {
                    "description": "folder name",
                    "type": "string"
                }
            }
        },
        "proto.CreateMultipartTaskConflictRsp": {
            "type": "object",
            "required": [
                "betag",
                "fileName",
                "size"
            ],
            "properties": {
                "albumId": {
                    "type": "integer"
                },
                "betag": {
                    "type": "string",
                    "maxLength": 34,
                    "minLength": 32
                },
                "businessId": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "integer"
                },
                "fileName": {
                    "type": "string"
                },
                "folderId": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "modifyTime": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "uploadId": {
                    "type": "string"
                },
                "uploadedParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Part"
                    }
                },
                "uploadingParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Part"
                    }
                }
            }
        },
        "proto.CreateMultipartTaskReq": {
            "type": "object",
            "required": [
                "betag",
                "fileName",
                "size"
            ],
            "properties": {
                "albumId": {
                    "type": "integer"
                },
                "betag": {
                    "type": "string",
                    "maxLength": 34,
                    "minLength": 32
                },
                "businessId": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "integer"
                },
                "fileName": {
                    "type": "string"
                },
                "folderId": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "modifyTime": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "proto.CreateMultipartTaskRsp": {
            "type": "object",
            "properties": {
                "completeInfo": {
                    "description": "task completed",
                    "allOf": [
                        {
                            "$ref": "#/definitions/proto.FileInfo"
                        }
                    ]
                },
                "conflictInfo": {
                    "description": "task exists",
                    "allOf": [
                        {
                            "$ref": "#/definitions/proto.CreateMultipartTaskConflictRsp"
                        }
                    ]
                },
                "rspType": {
                    "description": "rsp type",
                    "type": "integer"
                },
                "succInfo": {
                    "description": "task info",
                    "allOf": [
                        {
                            "$ref": "#/definitions/proto.CreateMultipartTaskSuccRsp"
                        }
                    ]
                }
            }
        },
        "proto.CreateMultipartTaskSuccRsp": {
            "type": "object",
            "properties": {
                "partSize": {
                    "type": "integer"
                },
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "proto.DbAffect": {
            "type": "object",
            "properties": {
                "affectRows": {
                    "type": "integer"
                }
            }
        },
        "proto.DeleteFileReq": {
            "type": "object",
            "properties": {
                "uuids": {
                    "description": "uuids",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.DeleteMultipartTaskReq": {
            "type": "object",
            "required": [
                "uploadId"
            ],
            "properties": {
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "proto.ErrMess": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/proto.CodeType"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.FileInfo": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "executable": {
                    "type": "boolean"
                },
                "ext": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "proto.FileInfoForInnerRsp": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "executable": {
                    "type": "boolean"
                },
                "ext": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "relativePath": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "proto.FileInfoForTrends": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "executable": {
                    "type": "boolean"
                },
                "ext": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "proto.FileInfoForTrendsReq": {
            "type": "object",
            "properties": {
                "uuids": {
                    "description": "uuids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.FileInfoForTrendsRsp": {
            "type": "object",
            "properties": {
                "fileInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.FileInfoForTrends"
                    }
                }
            }
        },
        "proto.FileInfoPub": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "proto.FileInfoRsp": {
            "type": "object",
            "properties": {
                "betag": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "fileCount": {
                    "type": "integer"
                },
                "isDir": {
                    "type": "boolean"
                },
                "mime": {
                    "type": "string"
                },
                "modifyAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "parentUuid": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "trashed": {
                    "description": "0-normal; 1-Logical delete, put into the recycle bin; 2-Has been cleared from the recycle bin and is to be physically deleted",
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "proto.FolderInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "operationAt": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "proto.GetListRspData": {
            "type": "object",
            "properties": {
                "fileList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.FileInfoPub"
                    }
                },
                "pageInfo": {
                    "$ref": "#/definitions/proto.PageInfoExt"
                }
            }
        },
        "proto.ListMultipartReq": {
            "type": "object",
            "required": [
                "uploadId"
            ],
            "properties": {
                "uploadId": {
                    "type": "string"
                }
            }
        },
        "proto.ListMultipartRsp": {
            "type": "object",
            "properties": {
                "uploadedParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Part"
                    }
                },
                "uploadingParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Part"
                    }
                }
            }
        },
        "proto.ModifyFileReq": {
            "type": "object",
            "properties": {
                "fileName": {
                    "description": "new name",
                    "type": "string"
                },
                "uuid": {
                    "description": "file/folder uuid",
                    "type": "string"
                }
            }
        },
        "proto.MoveFileReq": {
            "type": "object",
            "required": [
                "uuids"
            ],
            "properties": {
                "destPath": {
                    "description": "dest path",
                    "type": "string"
                },
                "uuids": {
                    "description": "uuid",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.NewAndOldUuid": {
            "type": "object",
            "properties": {
                "newId": {
                    "type": "string"
                },
                "oldId": {
                    "type": "string"
                }
            }
        },
        "proto.PageInfoExt": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "proto.Part": {
            "type": "object",
            "required": [
                "end"
            ],
            "properties": {
                "end": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "proto.RecycledPhyDeleteReq": {
            "type": "object",
            "properties": {
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.RestoreRecycledReq": {
            "type": "object",
            "required": [
                "uuids"
            ],
            "properties": {
                "uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "proto.StatusRsp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "proto.Storage": {
            "type": "object",
            "properties": {
                "userStorage": {
                    "type": "integer"
                }
            }
        },
        "proto.User": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "proto.VodSymlinkReq": {
            "type": "object",
            "properties": {
                "uuid": {
                    "description": "file's uuid",
                    "type": "string"
                }
            }
        },
        "proto.VodSymlinkRsp": {
            "type": "object",
            "properties": {
                "linkName": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "aofs apis",
	Description:      "This is AO.space aofs OpenAPI reference document.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
